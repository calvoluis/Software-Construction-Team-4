<CFG>
  <nodes class="linked-list">
    <CFGNode>
      <nodeId>7 8 10 11 12 13 14</nodeId>
      <beginLine>7</beginLine>
      <endLine>14</endLine>
      <representedCode>System.out.println(&quot;Please put in coordinates for rectangles&quot;);
System.out.println(&quot;(x1 y1 x2 y2 x3 y3 x4 y4)&quot;);
Scanner in = new Scanner(System.in);
String input = in.nextLine();
in.close();
input = input.trim();
String[] inputArray = input.split(&quot; &quot;);</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>15</nodeId>
      <beginLine>15</beginLine>
      <endLine>15</endLine>
      <representedCode>if(inputArray.length != 8)</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>15</nodeId>
      <beginLine>15</beginLine>
      <endLine>15</endLine>
      <representedCode>System.out.println(&quot;Invalid inputs please try again&quot;);</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>17</nodeId>
      <beginLine>17</beginLine>
      <endLine>17</endLine>
      <representedCode>int[] coordinates = new int[8];</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>18</nodeId>
      <beginLine>18</beginLine>
      <endLine>24</endLine>
      <representedCode>for(int i = 0; i &lt; 8; i++)</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>26</nodeId>
      <beginLine>26</beginLine>
      <endLine>26</endLine>
      <representedCode>System.out.println(overlap);</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>19</nodeId>
      <beginLine>19</beginLine>
      <endLine>23</endLine>
      <representedCode>try</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>20</nodeId>
      <beginLine>20</beginLine>
      <endLine>20</endLine>
      <representedCode>coordinates[i] = Integer.parseInt(inputArray[i]);</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>22</nodeId>
      <beginLine>22</beginLine>
      <endLine>22</endLine>
      <representedCode>System.out.println(&quot;Invalid inputs please try again&quot;);</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>56</nodeId>
      <beginLine>56</beginLine>
      <endLine>56</endLine>
      <representedCode>if(checkRectangles(x1, y1, x2, y2, x3, y3, x4, y4))</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>58</nodeId>
      <beginLine>58</beginLine>
      <endLine>58</endLine>
      <representedCode>String overlaps = &quot;&quot;;</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>61</nodeId>
      <beginLine>61</beginLine>
      <endLine>61</endLine>
      <representedCode>if((x1 &lt; x4 &amp;&amp; x4 &lt; x2) &amp;&amp; (y1 &lt; y4 &amp;&amp; y4 &lt; y2))</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>64</nodeId>
      <beginLine>64</beginLine>
      <endLine>64</endLine>
      <representedCode>if((x1 &lt; x4 &amp;&amp; x4 &lt; x2) &amp;&amp; (y1 &lt; y3 &amp;&amp; y3 &lt; y2))</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>67</nodeId>
      <beginLine>67</beginLine>
      <endLine>67</endLine>
      <representedCode>if((x1 &lt; x3 &amp;&amp; x3 &lt; x2) &amp;&amp; (y1 &lt; y3 &amp;&amp; y3 &lt; y2))</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>70</nodeId>
      <beginLine>70</beginLine>
      <endLine>70</endLine>
      <representedCode>if((x1 &lt; x3 &amp;&amp; x3 &lt; x2) &amp;&amp; (y1 &lt; y4 &amp;&amp; y4 &lt; y2))</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>74</nodeId>
      <beginLine>74</beginLine>
      <endLine>74</endLine>
      <representedCode>if(overlaps == &quot;&quot;)</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>84</nodeId>
      <beginLine>84</beginLine>
      <endLine>84</endLine>
      <representedCode>int monthNumber = 0;</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>86</nodeId>
      <beginLine>86</beginLine>
      <endLine>86</endLine>
      <representedCode>if(month == null)</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>90</nodeId>
      <beginLine>90</beginLine>
      <endLine>130</endLine>
      <representedCode>switch(month.toLowerCase())</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>136</nodeId>
      <beginLine>136</beginLine>
      <endLine>136</endLine>
      <representedCode>PrintWriter out = null;</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>138</nodeId>
      <beginLine>138</beginLine>
      <endLine>160</endLine>
      <representedCode>try</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>139 141</nodeId>
      <beginLine>139</beginLine>
      <endLine>141</endLine>
      <representedCode>System.out.println(&quot;Entering&quot; + &quot; try statement&quot;);
out = new PrintWriter(new FileWriter(&quot;OutFile.txt&quot;));</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>142</nodeId>
      <beginLine>142</beginLine>
      <endLine>144</endLine>
      <representedCode>for(int i = 0; i &lt; SIZE; i++)</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>143</nodeId>
      <beginLine>143</beginLine>
      <endLine>143</endLine>
      <representedCode>out.println(&quot;Value at: &quot; + i + &quot; = &quot; + list.get(i));</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>146</nodeId>
      <beginLine>146</beginLine>
      <endLine>147</endLine>
      <representedCode>System.err.println(&quot;Caught IndexOutOfBoundsException: &quot; + e.getMessage());</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>150</nodeId>
      <beginLine>150</beginLine>
      <endLine>150</endLine>
      <representedCode>System.err.println(&quot;Caught IOException: &quot; + e.getMessage());</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>153</nodeId>
      <beginLine>153</beginLine>
      <endLine>153</endLine>
      <representedCode>if(out != null)</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>155</nodeId>
      <beginLine>155</beginLine>
      <endLine>155</endLine>
      <representedCode>out.close();</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>158</nodeId>
      <beginLine>158</beginLine>
      <endLine>158</endLine>
      <representedCode>System.out.println(&quot;PrintWriter not open&quot;);</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>163</nodeId>
      <beginLine>163</beginLine>
      <endLine>163</endLine>
      <representedCode>if(m.signum &lt;= 0)</representedCode>
    </CFGNode>
    <CFGNode>
      <nodeId>165</nodeId>
      <beginLine>165</beginLine>
      <endLine>165</endLine>
      <representedCode>assert this.multiply(result).mod(m).equals(ONE) : this;</representedCode>
    </CFGNode>
  </nodes>
  <edges class="linked-list">
    <CFGEdge>
      <fromNode>5</fromNode>
      <toNode>15</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>5</fromNode>
      <toNode>15</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>15</fromNode>
      <toNode>15</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>16</fromNode>
      <toNode>18</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>16</fromNode>
      <toNode>18</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>16</fromNode>
      <toNode>26</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>19</fromNode>
      <toNode>19</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>20</fromNode>
      <toNode>20</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>22</fromNode>
      <toNode>22</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>56</fromNode>
      <toNode>56</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>56</fromNode>
      <toNode>61</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>56</fromNode>
      <toNode>61</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>56</fromNode>
      <toNode>64</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>56</fromNode>
      <toNode>67</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>56</fromNode>
      <toNode>70</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>56</fromNode>
      <toNode>74</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>83</fromNode>
      <toNode>86</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>83</fromNode>
      <toNode>86</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>83</fromNode>
      <toNode>90</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>135</fromNode>
      <toNode>138</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>135</fromNode>
      <toNode>138</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>138</fromNode>
      <toNode>142</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>138</fromNode>
      <toNode>142</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>143</fromNode>
      <toNode>143</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>146</fromNode>
      <toNode>146</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>150</fromNode>
      <toNode>150</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>153</fromNode>
      <toNode>153</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>153</fromNode>
      <toNode>155</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>158</fromNode>
      <toNode>158</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>163</fromNode>
      <toNode>163</toNode>
    </CFGEdge>
    <CFGEdge>
      <fromNode>162</fromNode>
      <toNode>165</toNode>
    </CFGEdge>
  </edges>
</CFG>